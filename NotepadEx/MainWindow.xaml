<Window x:Class="NotepadEx.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:NotepadEx"
        xmlns:behaviors="clr-namespace:NotepadEx.MVVM.Behaviors"
        xmlns:UserControls="clr-namespace:NotepadEx.MVVM.View.UserControls"
        xmlns:Converters="clr-namespace:NotepadEx.Converters"
        mc:Ignorable="d"
        Title="NotepadEx" 
        Height="450" 
        Width="800"
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="NoResize"
        ShowInTaskbar="True"
        Background="Transparent">

    <b:Interaction.Behaviors>
        <behaviors:WindowMouseMoveBehavior 
            MouseMoveCommand="{Binding MouseMoveCommand}"
            ResizeCommand="{Binding ResizeCommand}"/>
    </b:Interaction.Behaviors>

    <Window.Resources>
        <Converters:StringEqualityMultiConverter x:Key="StringEqualityMultiConverter"/>
        <Converters:BooleanToTextDecorationConverter x:Key="BooleanToTextDecorationConverter"/>
    </Window.Resources>

    <Grid>
        <Border BorderThickness="2" 
                BorderBrush="{DynamicResource Color_BorderColor}" 
                CornerRadius="1" 
                Background="Transparent">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <UserControls:CustomTitleBar Grid.Row="0" DataContext="{Binding TitleBarViewModel}"/>

                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{Binding MenuBarHeight}"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="{Binding InfoBarHeight}"/>
                    </Grid.RowDefinitions>

                    <Menu IsMainMenu="True" 
                          Background="{DynamicResource Color_MenuBarBg}"
                          IsEnabled="{Binding IsMenuBarEnabled}">
                        <MenuItem Name="MenuItemFileDropDown" Header="File" Foreground="{DynamicResource Color_MenuItemFg}">
                            <MenuItem Header="New" 
                                    Command="{Binding NewCommand}"
                                    Foreground="{DynamicResource Color_MenuItemFg}"/>
                            <MenuItem Header="Open..." 
                                    Command="{Binding OpenCommand}"
                                    Foreground="{DynamicResource Color_MenuItemFg}"/>

                            <MenuItem Name="MenuItem_OpenRecent"  
                                    Header="Open Recent" 
                                    Foreground="{DynamicResource Color_MenuItemFg}">
                                <b:Interaction.Behaviors>
                                    <behaviors:MenuItemBehavior 
                                        ClickCommand="{Binding OpenRecentCommand}"/>
                                </b:Interaction.Behaviors>
                                <MenuItem Header="..." Foreground="{DynamicResource Color_MenuItemFg}"/>
                            </MenuItem>

                            <MenuItem Header="Save" 
                                    Command="{Binding SaveCommand}"
                                    Foreground="{DynamicResource Color_MenuItemFg}"/>
                            <MenuItem Header="Save As..." 
                                    Command="{Binding SaveAsCommand}"
                                    Foreground="{DynamicResource Color_MenuItemFg}"/>
                            <MenuItem Header="Print..." 
                                    Command="{Binding PrintCommand}"
                                    Foreground="{DynamicResource Color_MenuItemFg}"/>
                            <MenuItem Header="Open Current File Location..." 
                                    Command="{Binding OpenFileLocationCommand}"
                                    Foreground="{DynamicResource Color_MenuItemFg}"/>
                            <MenuItem Header="Exit" 
                                    Command="{Binding ExitCommand}"
                                    Foreground="{DynamicResource Color_MenuItemFg}"/>
                        </MenuItem>

                        <MenuItem Header="Edit" Foreground="{DynamicResource Color_MenuItemFg}">
                            <MenuItem Header="Find and Replace..." Command="{Binding OpenFindReplaceCommand}" Foreground="{DynamicResource Color_MenuItemFg}"/>

                            <MenuItem Header="Copy" 
                                    Command="{Binding CopyCommand}"
                                    Foreground="{DynamicResource Color_MenuItemFg}"/>
                            <MenuItem Header="Cut" 
                                    Command="{Binding CutCommand}"
                                    Foreground="{DynamicResource Color_MenuItemFg}"/>
                            <MenuItem Header="Paste" 
                                    Command="{Binding PasteCommand}"
                                    Foreground="{DynamicResource Color_MenuItemFg}"/>
                        </MenuItem>

                        <MenuItem Header="Preferences" Foreground="{DynamicResource Color_MenuItemFg}">
                            <MenuItem Header="Font Editor..." Command="{Binding OpenFontEditorCommand}" Foreground="{DynamicResource Color_MenuItemFg}"/>

                            <MenuItem Header="Toggle Word Wrapping" 
                                    Command="{Binding ToggleWordWrapCommand}"
                                    Foreground="{DynamicResource Color_MenuItemFg}"/>
                            <!--<MenuItem Header="Auto Hide Menu Bar" 
                                    Command="{Binding ToggleMenuBarCommand}"
                                    Foreground="{DynamicResource Color_MenuItemFg}"/>-->
                            <MenuItem Header="Show Info Bar" 
                                    Command="{Binding ToggleInfoBarCommand}"
                                    Foreground="{DynamicResource Color_MenuItemFg}"/>
                        </MenuItem>
                        

                        <MenuItem Header="Theme" Foreground="{DynamicResource Color_MenuItemFg}">
                            <MenuItem.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </MenuItem.ItemsPanel>

                            <MenuItem Header="Theme Editor..." Command="{Binding OpenThemeEditorCommand}" Foreground="{DynamicResource Color_MenuItemFg}"/>
                            <Separator/>
                            <MenuItem Header="Themes" ItemsSource="{Binding AvailableThemes}">
                                <MenuItem.ItemTemplate>
                                    <DataTemplate>
                                        <MenuItem Header="{Binding Name}"
                                                  Command="{Binding DataContext.ChangeThemeCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                  CommandParameter="{Binding}"
                                                  Foreground="{DynamicResource Color_MenuItemFg}">
                                            <MenuItem.IsChecked>
                                                <MultiBinding Converter="{StaticResource StringEqualityMultiConverter}">
                                                    <Binding Path="Name"/>
                                                    <Binding Path="DataContext.CurrentThemeName" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                </MultiBinding>
                                            </MenuItem.IsChecked>
                                        </MenuItem>
                                    </DataTemplate>
                                </MenuItem.ItemTemplate>
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="About" Foreground="{DynamicResource Color_MenuItemFg}">
                            <MenuItem Header="Github.com/BitSwapper" Foreground="{DynamicResource Color_MenuItemFg}"/>

                        </MenuItem>
                    </Menu>

                    <Grid Grid.Row="1" Background="{DynamicResource Color_TextEditorBg}">
                        <TextBox Text="{Binding DocumentContent, UpdateSourceTrigger=PropertyChanged}"
                                 Background="Transparent"
                                 Foreground="{DynamicResource Color_TextEditorFg}"
                                 AcceptsReturn="True"
                                 FontFamily="{DynamicResource Font_Family}"
                                 FontSize="{DynamicResource Font_Size}"
                                 FontStyle="{DynamicResource Font_Style}"
                                 FontWeight="{DynamicResource Font_Weight}"
                                 TextWrapping="{Binding TextWrappingMode}"
                                 TextOptions.TextRenderingMode="ClearType"
                                 Margin="2"
                                 BorderBrush="Transparent"
                                 BorderThickness="0"
                                 VerticalScrollBarVisibility="Auto"
                                 HorizontalScrollBarVisibility="Auto"
                                 SpellCheck.IsEnabled="True"
                                 CaretBrush="{DynamicResource Color_TextEditorCaret}"
                                 SelectionBrush="{DynamicResource Color_TextEditorTextHighlight}"
                                 Name="txtEditor">

                            <b:Interaction.Behaviors>
                                <behaviors:TextBoxSelectionBehavior 
                                    SelectionChangedCommand="{Binding SelectionChangedCommand}"
                                    TextChangedCommand="{Binding TextChangedCommand}"
                                    PreviewKeyDownCommand="{Binding PreviewKeyDownCommand}"/>
                            </b:Interaction.Behaviors>

                            <TextBox.Resources>
                                <Style TargetType="ScrollViewer">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ScrollViewer">
                                                <Grid x:Name="PART_Root">
                                                    <b:Interaction.Behaviors>
                                                        <behaviors:ScrollViewerBehavior 
                                                            MouseWheelCommand="{Binding ScrollCommand}"/>
                                                    </b:Interaction.Behaviors>

                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>

                                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                                          Grid.Row="0" 
                                                                          Grid.Column="0" 
                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                          CanContentScroll="True"
                                                                          CanHorizontallyScroll="True"
                                                                          CanVerticallyScroll="True"/>

                                                    <ScrollBar x:Name="PART_VerticalScrollBar" 
                                                             Grid.Row="0" 
                                                             Grid.Column="1" 
                                                             Orientation="Vertical" 
                                                             Maximum="{TemplateBinding ScrollableHeight}" 
                                                             ViewportSize="{TemplateBinding ViewportHeight}"
                                                             Value="{TemplateBinding VerticalOffset}" 
                                                             Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                             AutomationProperties.AutomationId="VerticalScrollBar"/>

                                                    <ScrollBar x:Name="PART_HorizontalScrollBar" 
                                                             Grid.Row="1" 
                                                             Grid.Column="0" 
                                                             Orientation="Horizontal" 
                                                             Maximum="{TemplateBinding ScrollableWidth}" 
                                                             ViewportSize="{TemplateBinding ViewportWidth}"
                                                             Value="{TemplateBinding HorizontalOffset}" 
                                                             Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                             AutomationProperties.AutomationId="HorizontalScrollBar"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                                <Style TargetType="ScrollBar">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ScrollBar">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Track x:Name="PART_Track" IsEnabled="True">
                                                        <Track.Thumb>
                                                            <Thumb x:Name="PART_Thumb" 
                                                                  Background="{DynamicResource Color_TextEditorScrollBar}">
                                                                <Thumb.Effect>
                                                                    <DropShadowEffect/>
                                                                </Thumb.Effect>
                                                            </Thumb>
                                                        </Track.Thumb>
                                                    </Track>
                                                    <Rectangle Fill="Transparent">
                                                        <b:Interaction.Behaviors>
                                                            <behaviors:ScrollBarDragBehavior
                                                                PreviewMouseDownCommand="{Binding ScrollBarDragCommand}"/>
                                                        </b:Interaction.Behaviors>
                                                    </Rectangle>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="Orientation" Value="Vertical">
                                                        <Setter TargetName="PART_Track" Property="IsDirectionReversed" Value="True"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Opacity" Value="0.4"/>
                                </Style>

                                <Style TargetType="TextBox">
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                                    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                                </Style>
                            </TextBox.Resources>

                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding SaveCommand}"      Gesture="Ctrl+S"/>
                                <KeyBinding Command="{Binding OpenCommand}"      Gesture="Ctrl+O"/>
                                <KeyBinding Command="{Binding NewCommand}"       Gesture="Ctrl+N"/>
                                <KeyBinding Command="{Binding PasteCommand}"     Gesture="Ctrl+V"/>
                                <KeyBinding Command="{Binding CutCommand}"       Gesture="Ctrl+X"/>
                                <KeyBinding Command="{Binding CopyCommand}"      Gesture="Ctrl+C"/>
                                <KeyBinding Command="{Binding InsertTabCommand}" Gesture="Tab"/>
                            </TextBox.InputBindings>
                        </TextBox>
                    </Grid>

                    <Grid Grid.Row="2" Background="{DynamicResource Color_InfoBarBg}">
                        <TextBlock  
                               Foreground="{DynamicResource Color_InfoBarFg}"
                               Text="{Binding StatusText}"
                               Margin="4,0,0,0" 
                               FontFamily="Verdana" 
                               FontSize="12"
                               FontWeight="SemiBold"
                               VerticalAlignment="Center"/>
                    </Grid>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>